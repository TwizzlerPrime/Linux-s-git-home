      ----------------------
      What is a bash script?   
      ----------------------       
Bash script is a file that contains a series of commands executed by the Bash shell, commonly used in Unix/Linux 
systems. Bash (Bourne Again Shell) is a command-line interpreter.
                     How to Write a bash script.
1. Always start with a shebang (#!) to specify the shell interpreter. (e.g #!/bin/bash)

2.Variables are declared without "$", but are referred to using the "$" symbol. 
No spaces between the variable and its value are allowed to be made. E.g =
#!/bin/bash
NAME="Ire"
echo "Hello. $NAME"

3. "if-else" statements: they check conditions and execute code based on whether the condition is true or false.
For example, it can check wheter a file  exists or not when combined with -d.
  
  chmod is used in making your bash scripts executable, more specifically = chmod +x script_name.sh
  "./" before a file makes executes it, like = ./script_name.sh

  4. A list of commands and what they do.
    # when put next to text makes it a comment, and it is ignored by the code.
    fi finishes an if-else statement.
    if runs code based on the condition is is given, if the "if" statement is not met, "else" runs instead.
    read checks the response given for a sentence, you can ask for the input by using "-p" after "read". For example, 
    read -p "What will you do?" will read the users response to "What will you do?".
   
    Regex (^[0-9]+$):
This part is a pattern used to match text. It’s called a "regular expression"
    ^ means "start of input" and $ means "end of input". [0-9] means any digit, and + means "at least one or more".

 Arithmetic Calculation ($(( ))):
"$(( ))" is used to do math calculations in Bash.
age_days=$((age_years * 365)) calculates how many days are in the given number of years. It multiplies age_years by 365.

[[ ]] and !~:
"[[ ]]" is used to test conditions in Bash. It helps make the script safer and easier to write.
"!~" means "does not match". In this script, [[ ! $age_years =~ ^[0-9]+$ ]] checks if the input does not match the pattern (meaning it’s not a number).

 ==, |&nbsp;, &nbsp;&gt;&nbsp;, &nbsp;&lt;&nbsp;, -eq, -ne, -gt, if, else, etc are known as conditionals.





                                            -----------------
                                            System Monitoring
    System monitoring is the tracking, and analysis of the performance, health, activity and security of computers.
It collects many data aspects such as CPU usage, memory use, network traffic, disk space, and app performance.
It also tracks malware activity, unauthorized access attempts, and any other security related issues.

    We can use shell and bash scripts (on linux) to monitor system resources like CPU, memory, etc.
#!/bin/bash
# CPU, Memory, Disk Usage Monitoring Script

echo "CPU Usage:"
top -b -n1 | grep "Cpu(s)"

echo "Memory Usage:"
free -m

echo "Disk Usage:"
df -h
"df" stands for DiskFilesystem and "-h" makes the results human readable.
"top" displays real time system information, "-b" stands for batch mode, and -n1 only runs the "top" command once,
instead of continuously updating.
